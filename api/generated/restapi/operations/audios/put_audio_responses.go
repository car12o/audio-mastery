// Code generated by go-swagger; DO NOT EDIT.

package audios

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PutAudioNoContentCode is the HTTP code returned for type PutAudioNoContent
const PutAudioNoContentCode int = 204

/*PutAudioNoContent No Content

swagger:response putAudioNoContent
*/
type PutAudioNoContent struct {

	/*
	  In: Body
	*/
	Payload *PutAudioNoContentBody `json:"body,omitempty"`
}

// NewPutAudioNoContent creates PutAudioNoContent with default headers values
func NewPutAudioNoContent() *PutAudioNoContent {

	return &PutAudioNoContent{}
}

// WithPayload adds the payload to the put audio no content response
func (o *PutAudioNoContent) WithPayload(payload *PutAudioNoContentBody) *PutAudioNoContent {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put audio no content response
func (o *PutAudioNoContent) SetPayload(payload *PutAudioNoContentBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutAudioNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutAudioBadRequestCode is the HTTP code returned for type PutAudioBadRequest
const PutAudioBadRequestCode int = 400

/*PutAudioBadRequest Bad Request

swagger:response putAudioBadRequest
*/
type PutAudioBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PutAudioBadRequestBody `json:"body,omitempty"`
}

// NewPutAudioBadRequest creates PutAudioBadRequest with default headers values
func NewPutAudioBadRequest() *PutAudioBadRequest {

	return &PutAudioBadRequest{}
}

// WithPayload adds the payload to the put audio bad request response
func (o *PutAudioBadRequest) WithPayload(payload *PutAudioBadRequestBody) *PutAudioBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put audio bad request response
func (o *PutAudioBadRequest) SetPayload(payload *PutAudioBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutAudioBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutAudioUnauthorizedCode is the HTTP code returned for type PutAudioUnauthorized
const PutAudioUnauthorizedCode int = 401

/*PutAudioUnauthorized Unauthorized

swagger:response putAudioUnauthorized
*/
type PutAudioUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *PutAudioUnauthorizedBody `json:"body,omitempty"`
}

// NewPutAudioUnauthorized creates PutAudioUnauthorized with default headers values
func NewPutAudioUnauthorized() *PutAudioUnauthorized {

	return &PutAudioUnauthorized{}
}

// WithPayload adds the payload to the put audio unauthorized response
func (o *PutAudioUnauthorized) WithPayload(payload *PutAudioUnauthorizedBody) *PutAudioUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put audio unauthorized response
func (o *PutAudioUnauthorized) SetPayload(payload *PutAudioUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutAudioUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutAudioInternalServerErrorCode is the HTTP code returned for type PutAudioInternalServerError
const PutAudioInternalServerErrorCode int = 500

/*PutAudioInternalServerError Internal Server Error

swagger:response putAudioInternalServerError
*/
type PutAudioInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PutAudioInternalServerErrorBody `json:"body,omitempty"`
}

// NewPutAudioInternalServerError creates PutAudioInternalServerError with default headers values
func NewPutAudioInternalServerError() *PutAudioInternalServerError {

	return &PutAudioInternalServerError{}
}

// WithPayload adds the payload to the put audio internal server error response
func (o *PutAudioInternalServerError) WithPayload(payload *PutAudioInternalServerErrorBody) *PutAudioInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put audio internal server error response
func (o *PutAudioInternalServerError) SetPayload(payload *PutAudioInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutAudioInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
